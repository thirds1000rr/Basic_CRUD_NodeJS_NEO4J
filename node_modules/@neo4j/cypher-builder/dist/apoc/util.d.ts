import type { ListExpr as List } from "../expressions/list/ListExpr";
import type { MapExpr as Map } from "../expressions/map/MapExpr";
import { Literal } from "../references/Literal";
import { VoidCypherProcedure } from "../procedures/CypherProcedure";
import { CypherFunction } from "../expressions/functions/CypherFunctions";
import type { Predicate } from "../types";
/**
 * @group Expressions
 * @category Procedures
 */
export declare function validate(predicate: Predicate, message: string | Literal<string>, params?: List | Literal | Map): VoidCypherProcedure;
/**
 * @group Expressions
 * @category Functions
 */
export declare function validatePredicate(predicate: Predicate, message: string): CypherFunction;
//# sourceMappingURL=util.d.ts.map