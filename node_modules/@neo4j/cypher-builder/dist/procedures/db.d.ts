import { CypherProcedure } from "./CypherProcedure";
import type { Literal } from "../references/Literal";
import type { Param } from "../references/Param";
import type { Variable } from "../references/Variable";
type FulltextPhrase = string | Literal<string> | Param | Variable;
/**
 * @see [Neo4j Documentation](https://neo4j.com/docs/operations-manual/5/reference/procedures/)
 * @group Expressions
 * @category Procedures
 */
export declare const index: {
    fulltext: {
        queryNodes(indexName: string | Literal<string>, phrase: FulltextPhrase): CypherProcedure<"node" | "score">;
    };
};
/** Returns all labels in database
 * @see [Neo4j Documentation](https://neo4j.com/docs/operations-manual/5/reference/procedures/#procedure_db_labels)
 * @group Expressions
 * @category Procedures
 */
export declare function labels(): CypherProcedure<"label">;
export {};
//# sourceMappingURL=db.d.ts.map