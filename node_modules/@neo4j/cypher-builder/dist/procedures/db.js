"use strict";
/*
 * Copyright (c) "Neo4j"
 * Neo4j Sweden AB [http://neo4j.com]
 *
 * This file is part of Neo4j.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.labels = exports.index = void 0;
const CypherProcedure_1 = require("./CypherProcedure");
const normalize_variable_1 = require("../utils/normalize-variable");
/**
 * @see [Neo4j Documentation](https://neo4j.com/docs/operations-manual/5/reference/procedures/)
 * @group Expressions
 * @category Procedures
 */
exports.index = {
    fulltext: {
        queryNodes(indexName, phrase) {
            // TODO: add options, skip limit, analyzer
            const phraseVar = (0, normalize_variable_1.normalizeVariable)(phrase);
            const indexNameVar = (0, normalize_variable_1.normalizeVariable)(indexName);
            return new CypherProcedure_1.CypherProcedure("db.index.fulltext.queryNodes", [indexNameVar, phraseVar]);
        },
    },
};
/** Returns all labels in database
 * @see [Neo4j Documentation](https://neo4j.com/docs/operations-manual/5/reference/procedures/#procedure_db_labels)
 * @group Expressions
 * @category Procedures
 */
function labels() {
    return new CypherProcedure_1.CypherProcedure("db.labels");
}
exports.labels = labels;
//# sourceMappingURL=db.js.map