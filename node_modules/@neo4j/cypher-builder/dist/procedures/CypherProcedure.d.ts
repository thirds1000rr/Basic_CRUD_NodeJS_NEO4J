import { Clause } from "../clauses/Clause";
import type { CypherEnvironment } from "../Environment";
import type { Expr } from "../types";
import type { YieldProjectionColumn } from "./Yield";
import { Yield } from "./Yield";
/** Represents a Cypher Procedure that does not yield columns
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/clauses/call/)
 * @group Expressions
 * @category Procedures
 */
export declare class VoidCypherProcedure extends Clause {
    protected name: string;
    private params;
    constructor(name: string, params?: Array<Expr>);
    /** @internal */
    getCypher(env: CypherEnvironment): string;
    private getProcedureCypher;
}
/** Represents a Cypher Procedure
 * @see [Cypher Documentation](https://neo4j.com/docs/cypher-manual/current/clauses/call/)
 * @group Expressions
 * @category Procedures
 */
export declare class CypherProcedure<T extends string = string> extends VoidCypherProcedure {
    private yieldStatement;
    yield(...columns: Array<"*" | YieldProjectionColumn<T>>): Yield;
    /** @internal */
    getCypher(env: CypherEnvironment): string;
}
//# sourceMappingURL=CypherProcedure.d.ts.map