"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseAuthorizationAnnotation = void 0;
const classes_1 = require("../../classes");
const AuthorizationAnnotation_1 = require("../annotation/AuthorizationAnnotation");
const utils_1 = require("./utils");
function parseAuthorizationAnnotation(directive) {
    const { filter, validate, ...unrecognizedArguments } = (0, utils_1.parseArguments)(directive);
    if (!filter && !validate) {
        throw new classes_1.Neo4jGraphQLSchemaValidationError(`@authorization requires at least one of ${AuthorizationAnnotation_1.AuthorizationAnnotationArguments.join(", ")} arguments`);
    }
    if (Object.keys(unrecognizedArguments).length) {
        throw new classes_1.Neo4jGraphQLSchemaValidationError(`@authorization unrecognized arguments: ${Object.keys(unrecognizedArguments).join(", ")}`);
    }
    const filterRules = filter?.map((rule) => new AuthorizationAnnotation_1.AuthorizationFilterRule(rule));
    const validateRules = validate?.map((rule) => new AuthorizationAnnotation_1.AuthorizationValidateRule(rule));
    return new AuthorizationAnnotation_1.AuthorizationAnnotation({
        filter: filterRules,
        validate: validateRules,
    });
}
exports.parseAuthorizationAnnotation = parseAuthorizationAnnotation;
//# sourceMappingURL=authorization-annotation.js.map