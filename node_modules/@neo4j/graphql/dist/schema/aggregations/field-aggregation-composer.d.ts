import type { ObjectTypeComposer, SchemaComposer } from "graphql-compose";
import type { ObjectFields } from "../get-obj-field-meta";
import type { Node } from "../../classes";
import type { Subgraph } from "../../classes/Subgraph";
export declare enum FieldAggregationSchemaTypes {
    field = "AggregationSelection",
    node = "NodeAggregateSelection",
    edge = "EdgeAggregateSelection"
}
export declare class FieldAggregationComposer {
    private aggregationTypesMapper;
    private composer;
    constructor(composer: SchemaComposer, subgraph?: Subgraph);
    createAggregationTypeObject(baseTypeName: string, refNode: Node, relFields: ObjectFields | undefined): ObjectTypeComposer;
    private getAggregationFields;
    private createAggregationField;
}
//# sourceMappingURL=field-aggregation-composer.d.ts.map