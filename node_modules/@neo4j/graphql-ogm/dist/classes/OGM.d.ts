import type { Neo4jGraphQLConstructor, Node } from "@neo4j/graphql";
import type { GraphQLSchema } from "graphql";
import Model from "./Model";
export type OGMConstructor = Neo4jGraphQLConstructor;
declare class OGM<ModelMap = unknown> {
    checkNeo4jCompat: () => Promise<void>;
    private models;
    private neoSchema;
    private _schema?;
    private initializer?;
    constructor(input: OGMConstructor);
    get schema(): GraphQLSchema;
    get nodes(): Node[];
    init(): Promise<void>;
    model<M extends T extends keyof ModelMap ? ModelMap[T] : Model, T extends keyof ModelMap | string = string>(name: T): M;
    private initModel;
    private createInitializer;
}
export default OGM;
//# sourceMappingURL=OGM.d.ts.map